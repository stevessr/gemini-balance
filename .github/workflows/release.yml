name: Publish Release

on:
  push:
    tags:
      - 'v*' # 当推送以 "v" 开头的标签时触发（如 v1.0.0, v2.1.0）

jobs:
  update-release-draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      # Step 1: 检出代码库
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 自动生成 Release
      # Step 2: Create or Update Release using GitHub Script
      - name: Create or Update Release
        id: create_update_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = process.env.GITHUB_REF.replace('refs/tags/', '');
            let release = null;
            try {
              // Try to get existing release by tag
              const { data } = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: tag,
              });
              release = data;
              console.log(`Found existing release: ${release.html_url}`);
            } catch (error) {
              if (error.status === 404) {
                // If release not found, create a new one
                console.log(`Release for tag ${tag} not found. Creating a new one.`);
                const { data } = await github.rest.repos.createRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  tag_name: tag,
                  name: tag,
                  draft: false,
                  prerelease: false,
                });
                release = data;
                console.log(`Created new release: ${release.html_url}`);
              } else {
                throw error; // Re-throw other errors
              }
            }
            
            // Set the upload_url as a step output
            core.setOutput('upload_url', release.upload_url);
      
      # Step 3: 可选，构建zip文件
      - name: Create ZIP file
        run: |
          zip -r gemini-balance.zip . -x "*.git*" "*.github*" "*.env*" "logs/*" "tests/*"

      # Step 4: 可选，上传构建文件
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_update_release.outputs.upload_url }}
          asset_path: ./gemini-balance.zip # 替换为你的构建文件路径
          asset_name: gemini-balance.zip  # 替换为你的文件名
          asset_content_type: application/zip
